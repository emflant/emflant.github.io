gap + dminutes(30) # [1] "2018-03-11 03:00:00 EDT"
boundary
boundary + days(1) # period
boundary + days(1) # [1] "2009-03-09 01:59:59 CDT"
as.numeric(intv1, "years")
gap1 <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap2 <- gap1 + dminutes(30)
gap2
interval(gap1, gap2)
as.duration(interval(gap1, gap2))
as.period(interval(gap1, gap2))
a = hms("01:24:57")
a
a = hms("01:24:57")
a
a = hms("01:24:57") # [1] "1H 24M 57S"
as.numeric(a, "hours")
as.numeric(a, "seconds")
a = hms("01:24:57") # [1] "1H 24M 57S"
as.numeric(a, "hours") # [1] 1.415833
as.numeric(a, "seconds") # [1] 5097
a = hms("01:24:57") # [1] "1H 24M 57S"
as.numeric(a, "hours") # [1] 1.415833
as.numeric(a, "seconds") # [1] 5097
hms("01:24:57") # [1] "1H 24M 57S"
as.numeric(hms("01:24:57"), "hours") # [1] 1.415833
as.numeric(hms("01:24:57"), "seconds") # [1] 5097
hms("01:24:57")
as.numeric(hms("01:24:57"), "hours")
as.numeric(hms("01:24:57"), "seconds")
hms("01:24:57")
as.numeric(hms("01:24:57"), "hours")
as.numeric(hms("01:24:57"), "minutes")
as.numeric(hms("01:24:57"), "seconds")
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + dminutes(10) # [1] "2018-03-11 01:40:00 EST"
gap + dminutes(20) # [1] "2018-03-11 01:50:00 EST"
gap + dminutes(30) # [1] "2018-03-11 03:00:00 EDT"
gap1 <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap2 <- gap1 + dminutes(30)
as.duration(interval(gap1, gap2)) # [1] "1800s (~30 minutes)"
as.period(interval(gap1, gap2)) # [1] "1H 30M 0S"
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + dminutes(10) # [1] "2018-03-11 01:40:00 EST"
gap + dminutes(20) # [1] "2018-03-11 01:50:00 EST"
gap + dminutes(30) # [1] "2018-03-11 03:00:00 EDT"
as.duration(interval(gap, gap + dminutes(30)))
as.period(interval(gap, gap + dminutes(30)))
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + minutes(10) # [1] "2018-03-11 01:40:00 EST"
gap + minutes(20) # [1] "2018-03-11 01:50:00 EST"
gap + minutes(30) # [1] "2018-03-11 03:00:00 EDT"
gap + dminutes(10) # [1] "2018-03-11 01:40:00 EST"
gap + dminutes(20) # [1] "2018-03-11 01:50:00 EST"
gap + dminutes(30) # [1] "2018-03-11 03:00:00 EDT"
as.duration(interval(gap, gap + dminutes(30)))
as.period(interval(gap, gap + dminutes(30)))
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + minutes(10) # [1] "2018-03-11 01:40:00 EST"
gap + minutes(20) # [1] "2018-03-11 01:50:00 EST"
gap + minutes(40) # [1] "2018-03-11 03:00:00 EDT"
gap + dminutes(10) # [1] "2018-03-11 01:40:00 EST"
gap + dminutes(20) # [1] "2018-03-11 01:50:00 EST"
gap + dminutes(30) # [1] "2018-03-11 03:00:00 EDT"
as.duration(interval(gap, gap + dminutes(30)))
as.period(interval(gap, gap + dminutes(30)))
gap + minutes(60) # [1] "2018-03-11 03:00:00 EDT"
gap + minutes(60) # [1] "2018-03-11 03:00:00 EDT"
gap + minutes(70) # [1] "2018-03-11 03:00:00 EDT"
gap + minutes(80) # [1] "2018-03-11 03:00:00 EDT"
gap + minutes(90) # [1] "2018-03-11 03:00:00 EDT"
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + minutes(10)
gap + minutes(20)
gap + minutes(90)
gap + dminutes(10)
gap + dminutes(20)
gap + dminutes(30)
as.duration(interval(gap, gap + dminutes(30)))
as.period(interval(gap, gap + dminutes(30)))
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + minutes(10)
gap + minutes(20)
gap + minutes(90)
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + dminutes(10)
gap + dminutes(20)
gap + dminutes(30)
as.duration(interval(gap, gap + dminutes(30)))
as.period(interval(gap, gap + dminutes(30)))
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + minutes(10)
gap + minutes(20)
gap + minutes(30)
gap + minutes(90)
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + dminutes(10)
gap + dminutes(20)
gap + dminutes(30)
as.duration(interval(gap, gap + dminutes(30)))
as.period(interval(gap, gap + dminutes(30)))
gap + minutes(29) # 3
gap + minutes(30) # 3
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + minutes(10)
gap + minutes(20)
gap + minutes(30) # 30~89분사이는 NA 결과로 산출.
gap + minutes(90)
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + dminutes(10)
gap + dminutes(20)
gap + dminutes(30)
as.duration(interval(gap, gap + dminutes(30)))
as.period(interval(gap, gap + dminutes(30)))
as.numeric(as.duration(interval(gap, gap + dminutes(30))), "minute")
as.numeric(as.period(interval(gap, gap + dminutes(30))), "minute")
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + minutes(10)
gap + minutes(20)
gap + minutes(30) # 30~89분사이는 NA 결과로 산출.
gap + minutes(90)
gap <- ymd_hms("2018-03-11 01:30:00",tz="US/Eastern")
gap + dminutes(10)
gap + dminutes(20)
gap + dminutes(30)
# 시간의 연속성상 기간. 써머타임(일광절약시간, daylight saving time)같은 경우가 고려됨.
as.duration(interval(gap, gap + dminutes(30)))
as.numeric(as.duration(interval(gap, gap + dminutes(30))), "minute")
# 단순시간계산
as.period(interval(gap, gap + dminutes(30)))
as.numeric(as.period(interval(gap, gap + dminutes(30))), "minute")
file.path(getwd(), 'doc/')
list.files('../docs', pattern = '\\.html$', full.names = T)
search_file <- str_detect(list.files(full.names = T, recursive = T),
str_c(list.files('../docs', '\\.html$'), collapse = "|"))
library(tidyverse)
list.files('../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../docs', pattern = '\\.html$'), collapse = "|")
list.files('../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../docs', pattern = '\\.html$'), collapse = "|")
search_file <- str_detect(list.files(full.names = T, recursive = T),
str_c(list.files('../docs', '\\.html$'), collapse = "|"))
search_file
copy_origin <- list.files(full.names = T, recursive = T)[search_file]
copy_origin
file.copy(copy_origin, "../docs/", overwrite = T, copy.date = T)
getwd()
library(tidyverse)
search_file
list.files('../docs', pattern = '\\.html$', full.names = T)
plot(cars)
str_c(list.files('../docs', pattern = '\\.html$'), collapse = "|")
# copy list
search_file <- str_detect(list.files(full.names = T, recursive = T),
str_c(list.files('../docs', '\\.html$'), collapse = "|"))
copy_origin <- list.files(full.names = T, recursive = T)[search_file]
copy_origin
file.copy(copy_origin, "../docs/", overwrite = T, copy.date = T)
# show html files
list.files('../docs', pattern = '\\.html$', full.names = T)
# show html files
list.files('../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../docs', pattern = '\\.html$'), collapse = "|")
getwd()
getwd()
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
# start copy html files
search_file <- str_detect(list.files(full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin <- list.files(full.names = T, recursive = T)[search_file]
copy_origin
file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../../docs', pattern = '\\.html$'), collapse = "|")
# start copy html files
search_file <- str_detect(list.files(full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin <- list.files(full.names = T, recursive = T)[search_file]
copy_origin
search_file
# start copy html files
search_file <- str_detect(list.files(path = '../', full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
search_file
copy_origin <- list.files(full.names = T, recursive = T)[search_file]
copy_origin
# start copy html files
search_file <- str_detect(list.files(path = '../', full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
search_file
copy_origin <- list.files(path = '../', full.names = T, recursive = T)[search_file]
copy_origin
# start copy html files
search_file <- str_detect(list.files(path = '..', full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
search_file
copy_origin <- list.files(path = '..', full.names = T, recursive = T)[search_file]
copy_origin
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../../docs', pattern = '\\.html$'), collapse = "|")
# start copy html files
search_file <- str_detect(list.files(path = '..',
full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin <- list.files(path = '..',
full.names = T, recursive = T)[search_file]
file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
library(tidyverse)
library(tidyverse)
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../../docs', pattern = '\\.html$'), collapse = "|")
# start copy html files
search_file <- str_detect(list.files(path = '..',
full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin <- list.files(path = '..',
full.names = T, recursive = T)[search_file]
file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
```{r include=FALSE}
library(tidyverse)
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../../docs', pattern = '\\.html$'), collapse = "|")
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
library(tidyverse)
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../../docs', pattern = '\\.html$'), collapse = "|")
# start copy html files
search_file <- str_detect(list.files(path = '..',
full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin <- list.files(path = '..',
full.names = T, recursive = T)[search_file]
file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
library(tidyverse)
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../../docs', pattern = '\\.html$'), collapse = "|")
# start copy html files
search_file <- str_detect(list.files(path = '..',
full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin <- list.files(path = '..',
full.names = T, recursive = T)[search_file]
file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
library(tidyverse)
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../../docs', pattern = '\\.html$'), collapse = "|")
# start copy html files
search_file <- str_detect(list.files(path = '..',
full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin <- list.files(path = '..',
full.names = T, recursive = T)[search_file]
file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
# start copy html files
search_file = str_detect(list.files(path = '..',
full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin = list.files(path = '..',
full.names = T, recursive = T)[search_file]
copy_index = file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
copy_origin[copy_index]
# start copy html files
search_file = str_detect(list.files(path = '..',
full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin = list.files(path = '..',
full.names = T, recursive = T)[search_file]
copy_index = file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
library(tidyverse)
# show html files
list.files('../../docs', pattern = '\\.html$', full.names = T)
str_c(list.files('../../docs', pattern = '\\.html$'), collapse = "|")
# start copy html files
search_file = str_detect(list.files(path = '..',
full.names = T, recursive = T),
str_c(list.files('../../docs', '\\.html$'), collapse = "|"))
copy_origin = list.files(path = '..',
full.names = T, recursive = T)[search_file]
copy_index = file.copy(copy_origin, "../../docs/", overwrite = T, copy.date = T)
# 복사완료 파일
copy_origin[copy_index]
integrate(sin, 0, pi)
uniroot(sin, pi * c(1/2, 3/2))
plot(sin)
randomise <- function(f) f(runif(1e3))
randomise
randomise(mean)
randomise(mean)
randomise(mean)
randomise(mean)
randomise(mean)
triple = function(x) x * 3
map(1:3, triple)
map_dbl(1:3, triple)
seq_along(1:100)
seq_along(map_dbl(1:3, triple))
along.with
map_chr(mtcars, typeof)
mtcars
mtcars[1]
mtcars[2]
vector("list", length(mtcars))
mtcars[[1]]
1:3[[1]]
(1:3)[[1]]
(1:3)[[2]]
map_dbl(mtcars, function(x) length(unique(x)))
map_dbl(mtcars, ~ length(unique(.x)))
map_dbl(mtcars, ~ length(unique(.y)))
map_dbl(mtcars, ~ length(unique(..1)))
map_dbl(mtcars, ~ length(unique(..1)))
map_dbl(mtcars, ~ length(unique(..2)))
map_dbl(mtcars, ~ length(unique(..1)))
map_dbl(mtcars, ~ length(unique(.)))
map_dbl(mtcars, ~ length(unique(.)))
map_dbl(mtcars, ~ length(unique(.x)))
map_dbl(mtcars, ~ length(unique(.y)))
tribble( ~max, ~seq, 3, 1:3, 4, 1:4, 5, 1:5)
tribble( ~max, ~seq, 3, 1:3, 4, 1:4, 5, 1:5)
n_data = tribble( ~max, ~seq, 3, 1:3, 4, 1:4, 5, 1:5)
n_data %>%
mutate(n = map(dim))
n_data %>%
mutate(n = map(dim))
n_data %>%
mutate(n = map(n_data, dim))
n_data %>%
mutate(n = map(n_data, dim))
dim(n_data$seq)
length(n_data$seq)
len(n_data$seq)
lens(n_data$seq)
length(1:3)
length(1:10)
n_data %>%
mutate(n = map(n_data, length))
n_iris %>% mutate(n = map(data, dim))
n_iris <- iris %>% group_by(Species) %>% nest()
n_iris
n_iris %>% mutate(n = map(data, dim))
iris %>% group_by(Species)
iris %>% group_by(Species) %>% nest()
n_iris <- iris %>% group_by(Species) %>% nest()
n_iris
n_iris[[1]]
n_iris$data[[1]]
iris
n_iris$data[[1]]
n_iris$data[[2]]
iris
iris %>%
mutate(nn = map(Sepal.Length, function(x) x + 1 ))
iris %>%
mutate(nn = Sepal.Length + 1)
iris %>%
mutate(nn = Sepal.Length + 1)
batch_result = read.delim(file.path( "..", "..", "data", "batch_201901.txt"), stringsAsFactors = F)
batch_result = as.tibble(batch_result)
str(batch_result)
work_date = batch_result %>%
filter(JOB명 == "IMSRSAH0000-자산건전성매일배치", 실행시간 != "") %>%
select(WDATE)
library(tidyverse)
library(lubridate)
batch_result = read.delim(file.path( "..", "..", "data", "batch_201901.txt"), stringsAsFactors = F)
batch_result = as.tibble(batch_result)
str(batch_result)
work_date = batch_result %>%
filter(JOB명 == "IMSRSAH0000-자산건전성매일배치", 실행시간 != "") %>%
select(WDATE)
batch_result
batch_result %>%
group_by(JOB명) %>%
nest()
n_batch  = batch_result %>%
group_by(JOB명) %>%
nest()
View(n_batch)
n_batch  = batch_result %>%
group_by(JOB명) %>%
nest() %>%
mutate(n())
View(n_batch)
View(n_batch)
n_batch
batch_result %>%
group_by(JOB명) %>%
mutate(n())
batch_result %>%
group_by(JOB명) %>%
mutate(n()) %>%
View
batch_result %>%
filter(JOB명 == `IMSRSBL0200-RDW고객_부서_통화별환율_등_시계열데이터생성`)
batch_result %>%
filter(JOB명 == `IMSRSBL0200-RDW고객_부서_통화별환율_등_시계열데이터생성`)
batch_result %>%
filter(JOB명 == "IMSRSBL0200-RDW고객_부서_통화별환율_등_시계열데이터생성")
n_batch  = batch_result %>%
group_by(JOB명) %>%
nest()
n_batch
n_batch
n_batch  = batch_result %>%
group_by(JOB명) %>%
nest()
n_batch  = batch_result %>%
group_by(JOB명) %>%
nest() %>%
summarise(n = n())
n_batch
n_batch  = batch_result %>%
group_by(JOB명) %>%
nest()
n_batch
n_batch %>%
mutate(n = n(data))
n_batch %>%
mutate(n = n(data))
length(n_batch)
dim(n_batch)
dim(n_batch)[[1]]
row_number(n_batch)
row_number(n_batch[[2]])
batch_result
batch_result %>%
print(n = 20)
batch_result %>%
print(n = 20, width = Inf)
batch_result %>%
print(n = 20, width = 100)
batch_result %>%
print(n = 20, width = 1000)
batch_result %>%
print(n = 5, width = 1000)
batch_result %>%
print(n = 5, width = Inf)
nrow(n_batch)
n_batch %>%
mutate(n = nrow(data))
n_batch  = batch_result %>%
group_by(JOB명) %>%
nest()
n_batch %>%
mutate(n1 = nrow(data))
n_batch
n_batch %>%
filter(JOB명 == "EDW_ODS_JOB")
n_batch %>%
filter(JOB명 == "EDW_ODS_JOB") %>%
mutate(n1 = nrow(data))
nrow(n_batch$data[1])
nrow(n_batch$data[[1]])
n_batch$data
nrow(n_batch$data)
str(n_batch$data)
n_batch %>%
mutate(n1 = nrow(data[[1]]))
n_batch$data
unlist(n_batch$data)
n_batch %>%
mutate(n1 = map(data, function(df) rnow(df) ))
n_batch %>%
mutate(n1 = map(data, function(df) nrow(df) ))
n_batch %>%
mutate(n1 = map(data, function(df) nrow(df))) %>%
mutate(n2 = unlist(n1))
n_batch %>%
mutate(n1 = map_dbl(data, function(df) nrow(df)))
n_batch %>%
mutate(n1 = map(data, function(df) nrow(df)))
n_batch %>%
mutate(n1 = map_dbl(data, function(df) nrow(df)))
install.packages("pkgdown")
pkgdown::build_site()
vignette("pkgdown")
vignette("tidyverse")
vignette("tidyr")
vignette("stats")
vignette()
build_site()
library(pkgdown)
build_site()
build_site()
init_site()
pkgdown::template_reference()
pkgdown::build_site()
getwd()
getwd()
setwd(".")
getwd()
setwd("../")
getwd()
setwd("../")
getwd()
setwd("./emflant.github.io")
getwd()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site("../../emflant.github.io")
getwd(".")
setwd(".")
getwd()
